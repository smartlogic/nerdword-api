#!/usr/bin/env ruby
require File.expand_path('../../config/environment',  __FILE__)
require 'capybara/server'
require 'forwardable'
require 'client'

Tile.send(:remove_const, :REGULAR_DISTRIBUTION)
Tile::REGULAR_DISTRIBUTION = %w{
  G I N O O T T
  A E O Q R S U
  A I M N O T U
  A E F G I T O
  D E E I L P V
  A A B L Y
  A A D D O
  E E R
  A C E H U
  F I P R W
  M O U
  E I J L N
  E S
  D I N O
  H R Z
  A C E K T T W
  f I S
  a N B
  E G N X
  L R V
  R S Y
  E I
}

Capybara.server do |app, port|
  require 'rack/handler/thin'
  Thin::Logging.silent = true
  Rack::Handler::Thin.run(app, :Port => port)
end

server = Capybara::Server.new(Rails.application, 8888)
server.boot

puts "Server booted"

player_1_email = "player-#{SecureRandom.hex(10)}@example.com"
player_2_email = "player-#{SecureRandom.hex(10)}@example.com"
password = "password"

# Create player
UserCreation.new(:email => player_1_email, :password => password).perform

player_1_client = Client.new
player_1_client.basic_auth(player_1_email, password)


# Create player
UserCreation.new(:email => player_2_email, :password => password).perform

player_2_client = Client.new
player_2_client.basic_auth(player_2_email, password)


# Create the game
root_resource = RootResource.load(player_1_client.get("/").body)
games_link = root_resource.links.fetch("games")
player_1_client.post(games_link, { :players => [player_2_email] }.to_json)


user = User.find_by_email(player_1_email)
game = user.games.first
game.update_attributes(:random_seed => "0")

# View the game
root_resource = RootResource.load(player_1_client.get("/").body)
games_link = root_resource.links.fetch("games")
games_resource = GamesResource.load(player_1_client.get(games_link).body)

puts "Player 1 has #{games_resource.count} games"
games_resource.each do |game|
  puts
  game.users.each do |user|
    puts "* #{user.email}"
  end
  puts
end

# View the game
root_resource = RootResource.load(player_2_client.get("/").body)
games_link = root_resource.links.fetch("games")
games_resource = GamesResource.load(player_2_client.get(games_link).body)

puts "Player 2 has #{games_resource.count} games"
games_resource.each do |game|
  puts
  game.users.each do |user|
    puts "* #{user.email}"
  end
  puts
end


# View first turn
root_resource = RootResource.load(player_1_client.get("/").body)
games_link = root_resource.links.fetch("games")
games_resource = GamesResource.load(player_1_client.get(games_link).body)
game_resource = GameResource.load(player_1_client.get(games_resource.first.links.fetch("self")).body)

turns_link = game_resource.links.fetch("turns")
turns_resource = TurnsResource.load(player_1_client.get(turns_link).body)

puts "There are #{turns_resource.count} turns"
turns_resource.each do |turn|
  puts "Current player's turn - #{turn.user.email}"
  puts "Your rack - "
end
